use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1285028400',
        'name' => '/Users/naoya.ito/git/sandbox/mojo/templates/config.html.tt',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 10 "/Users/naoya.ito/git/sandbox/mojo/templates/config.html.tt"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n<h1>設定ですよ</h1>\n";
#line 6 "/Users/naoya.ito/git/sandbox/mojo/templates/config.html.tt"
    if ($stash->get(['h', 0, 'flash', [ 'message' ]])) {
    $output .=  "\n<p class=\"flash\">";
#line 5 "/Users/naoya.ito/git/sandbox/mojo/templates/config.html.tt"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['h', 0, 'flash', [ 'message' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</p>";
    }
    
    $output .=  "\n\n<p>ここは設定</p>\n\n";
        $context->include('wrapper.html.tt', { 'title' => '設定ページ', 'content', $output }); 
    };
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
